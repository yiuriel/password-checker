name: Test and Publish

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [created]

permissions:
  contents: write
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "20.x"
          cache: "npm"
      - run: npm ci
      - run: npm test
      - run: npm run build

  publish:
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' || github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-node@v3
        with:
          node-version: "20.x"
          registry-url: "https://registry.npmjs.org"
      - run: npm ci
      - name: Git config
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
      - name: Get current version
        id: current_version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
      - name: Bump version on push
        if: github.event_name == 'push'
        id: bump_version
        run: |
          # Get the latest commit message
          COMMIT_MSG=$(git log -1 --pretty=%B)
          if [[ $COMMIT_MSG == *"#major"* ]]; then
            npm version major --no-git-tag-version
          elif [[ $COMMIT_MSG == *"#minor"* ]]; then
            npm version minor --no-git-tag-version
          else
            npm version patch --no-git-tag-version
          fi
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
      - name: Set version from release
        if: github.event_name == 'release'
        id: release_version
        run: |
          # Extract version from release tag (v1.2.3 -> 1.2.3)
          VERSION=${GITHUB_REF#refs/tags/v}
          npm version $VERSION --no-git-tag-version
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - run: npm run build
      - name: Publish to npm
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            NEW_VERSION=${{ steps.bump_version.outputs.version }}
          else
            NEW_VERSION=${{ steps.release_version.outputs.version }}
          fi
          if [ "$NEW_VERSION" != "${{ steps.current_version.outputs.version }}" ]; then
            npm publish
          else
            echo "Version unchanged, skipping publish"
            exit 1
          fi
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - name: Commit and push version bump
        if: github.event_name == 'push'
        run: |
          git add package.json
          git commit -m "chore: bump version to ${{ steps.bump_version.outputs.version }} [skip ci]"
          git tag v${{ steps.bump_version.outputs.version }}
          git push origin HEAD:main --follow-tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
